name: Build and Deploy v1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-publish-image:

    runs-on: ubuntu-latest

    steps:
    
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build Docker image
      run: docker build . --file HelloWorld.API/Dockerfile --tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/helloworldapi:${{ github.sha }}

    - name: Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Publish Image to ACR
      run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/helloworldapi:${{ github.sha }}

  deploy-to-dev:

    env:
      AZURE_CONTAINER_REGISTRY: ${{ secrets.REGISTRY_LOGIN_SERVER }}
      CONTAINER_NAME: "your-container-name"
      RESOURCE_GROUP: "sandbox"
      CLUSTER_NAME: "aks-sandbox-1"
      CHART_PATH: "./helm/"
      CHART_OVERRIDE_PATH: "helm/Chart.yaml"
  
    needs: [build-and-publish-image]
    runs-on: ubuntu-latest
    
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.27'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Runs Helm to create manifest files
      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.CHART_PATH }}
          # overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
          overrides: |
            replicaCount:3
          helm-version: "latest"
        id: bake

      # Deploys application based on manifest files from previous step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ secrets.REGISTRY_LOGIN_SERVER }}/helloworldapi:${{ github.sha }}
